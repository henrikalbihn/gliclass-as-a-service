
# Below are all the sections and options you can have in ~/.streamlit/config.toml.


[global]

# By default, Streamlit displays a warning when a user sets both a widget
# default value in the function defining the widget and a widget value via
# the widget's key in `st.session_state`.

# If you'd like to turn off this warning, set this to True.

# Default: false
# disableWidgetStateDuplicationWarning = false

# If True, will show a warning when you run a Streamlit-enabled script
# via "python my_script.py".

# Default: true
# showWarningOnDirectExecution = true


[logger]

# Level of logging: 'error', 'warning', 'info', or 'debug'.

# Default: 'info'
# level = "info"

# String format for logging messages. If logger.datetimeFormat is set,
# logger messages will default to `%(asctime)s.%(msecs)03d %(message)s`. See
# [Python's documentation](https://docs.python.org/2.6/library/logging.html#formatter-objects)
# for available attributes.

# Default: "%(asctime)s %(message)s"
# messageFormat = "%(asctime)s %(message)s"


[client]

# Controls whether uncaught app exceptions and deprecation warnings
# are displayed in the browser. By default, this is set to True and
# Streamlit displays app exceptions and associated tracebacks, and
# deprecation warnings, in the browser.

# If set to False, deprecation warnings and full exception messages
# will print to the console only. Exceptions will still display in the
# browser with a generic error message. For now, the exception type and
# traceback show in the browser also, but they will be removed in the
# future.

# Default: true
# showErrorDetails = true

# Change the visibility of items in the toolbar, options menu,
# and settings dialog (top right of the app).

# Allowed values:
# * "auto" : Show the developer options if the app is accessed through
# localhost or through Streamlit Community Cloud as a developer.
# Hide them otherwise.
# * "developer" : Show the developer options.
# * "viewer" : Hide the developer options.
# * "minimal" : Show only options set externally (e.g. through
# Streamlit Community Cloud) or through st.set_page_config.
# If there are no options left, hide the menu.

# Default: "auto"
# toolbarMode = "auto"

# Controls whether to display the default sidebar page navigation in a
# multi-page app. This only applies when app's pages are defined by the
# `pages/` directory.

# Default: true
# showSidebarNavigation = true


[runner]

# Allows you to type a variable or string by itself in a single line of
# Python code to write it to the app.

# Default: true
# magicEnabled = true

# Handle script rerun requests immediately, rather than waiting for script
# execution to reach a yield point. This makes Streamlit much more
# responsive to user interaction, but it can lead to race conditions in
# apps that mutate session_state data outside of explicit session_state
# assignment statements.

# Default: true
# fastReruns = true

# Raise an exception after adding unserializable data to Session State.
# Some execution environments may require serializing all data in Session
# State, so it may be useful to detect incompatibility during development,
# or when the execution environment will stop supporting it in the future.

# Default: false
# enforceSerializableSessionState = false

# Adjust how certain 'options' widgets like radio, selectbox, and
# multiselect coerce Enum members when the Enum class gets
# re-defined during a script re-run.

# Allowed values:
# * "off": Disables Enum coercion.
# * "nameOnly": Enum classes can be coerced if their member names match.
# * "nameAndValue": Enum classes can be coerced if their member names AND
# member values match.

# Default: "nameOnly"
# enumCoercion = "nameOnly"


[server]

# List of folders that should not be watched for changes.

# Relative paths will be taken as relative to the current working directory.

# Example: ['/home/user1/env', 'relative/path/to/folder']

# Default: []
# folderWatchBlacklist = []

# Change the type of file watcher used by Streamlit, or turn it off
# completely.

# Allowed values:
# * "auto" : Streamlit will attempt to use the watchdog module, and
# falls back to polling if watchdog is not available.
# * "watchdog" : Force Streamlit to use the watchdog module.
# * "poll" : Force Streamlit to always use polling.
# * "none" : Streamlit will not watch files.

# Default: "auto"
# fileWatcherType = "auto"

# Symmetric key used to produce signed cookies. If deploying on multiple replicas, this should
# be set to the same value across all replicas to ensure they all share the same secret.

# Default: randomly generated secret key.
# cookieSecret = "0eb4b20df3d978de9a4a6b6f1c42e27fe499ad9ab65f6c5d82850ac788d23ecd"

# If false, will attempt to open a browser window on start.

# Default: false unless (1) we are on a Linux box where DISPLAY is unset, or
# (2) we are running in the Streamlit Atom plugin.
# headless = false

# Automatically rerun script when the file is modified on disk.

# Default: false
# runOnSave = false

# The address where the server will listen for client and browser
# connections. Use this if you want to bind the server to a specific address.
# If set, the server will only be accessible from this address, and not from
# any aliases (like localhost).

# Default: (unset)
# address =

# The port where the server will listen for browser connections.

# Don't use port 3000 which is reserved for internal development.

# Default: 8501
# port = 8501

# The base path for the URL where Streamlit should be served from.

# Default: ""
# baseUrlPath = ""

# Enables support for Cross-Origin Resource Sharing (CORS) protection, for added security.

# Due to conflicts between CORS and XSRF, if `server.enableXsrfProtection` is on and
# `server.enableCORS` is off at the same time, we will prioritize `server.enableXsrfProtection`.

# Default: true
# enableCORS = true

# Enables support for Cross-Site Request Forgery (XSRF) protection, for added security.

# Due to conflicts between CORS and XSRF, if `server.enableXsrfProtection` is on and
# `server.enableCORS` is off at the same time, we will prioritize `server.enableXsrfProtection`.

# Default: true
# enableXsrfProtection = true

# Max size, in megabytes, for files uploaded with the file_uploader.

# Default: 200
# maxUploadSize = 200

# Max size, in megabytes, of messages that can be sent via the WebSocket connection.

# Default: 200
# maxMessageSize = 200

# Enables support for websocket compression.

# Default: false
# enableWebsocketCompression = false

# Enable serving files from a `static` directory in the running app's directory.

# Default: false
# enableStaticServing = false

# Server certificate file for connecting via HTTPS.
# Must be set at the same time as "server.sslKeyFile".

# ['DO NOT USE THIS OPTION IN A PRODUCTION ENVIRONMENT. It has not gone through security audits or performance tests. For the production environment, we recommend performing SSL termination by the load balancer or the reverse proxy.']
# sslCertFile =

# Cryptographic key file for connecting via HTTPS.
# Must be set at the same time as "server.sslCertFile".

# ['DO NOT USE THIS OPTION IN A PRODUCTION ENVIRONMENT. It has not gone through security audits or performance tests. For the production environment, we recommend performing SSL termination by the load balancer or the reverse proxy.']
# sslKeyFile =


[browser]

# Internet address where users should point their browsers in order to
# connect to the app. Can be IP address or DNS name and path.

# This is used to:
# - Set the correct URL for CORS and XSRF protection purposes.
# - Show the URL on the terminal
# - Open the browser

# Default: "localhost"
# serverAddress = "localhost"

# Whether to send usage statistics to Streamlit.

# Default: true
# gatherUsageStats = true

# Port where users should point their browsers in order to connect to the
# app.

# This is used to:
# - Set the correct URL for XSRF protection purposes.
# - Show the URL on the terminal (part of `streamlit run`).
# - Open the browser automatically (part of `streamlit run`).

# This option is for advanced use cases. To change the port of your app, use
# `server.Port` instead. Don't use port 3000 which is reserved for internal
# development.

# Default: whatever value is set in server.port.
# serverPort = 8501


[mapbox]

# Configure Streamlit to use a custom Mapbox
# token for elements like st.pydeck_chart and st.map.
# To get a token for yourself, create an account at
# https://mapbox.com. It's free (for moderate usage levels)!

# Default: ""
# token = ""


[theme]

# The preset Streamlit theme that your custom theme inherits from.
# One of "light" or "dark".
base = "dark"

# Primary accent color for interactive elements.
primaryColor = "green"

# Background color for the main content area.
backgroundColor = "#2c3e50"

# Background color used for the sidebar and most interactive widgets.
secondaryBackgroundColor = "#34495e"

# Color used for almost all text.
textColor = "#ecf0f1"

# Font family for all text in the app, except code blocks. One of "sans serif",
# "serif", or "monospace".
font = "monospace"


[secrets]

# List of locations where secrets are searched. Entries can be a path to toml file or directory path where Kubernetes style secrets will be scanned. Order is important, import is first to last, so secrets in later files will take precedence over earlier ones.

# Default: [ "/Users/henrik/.streamlit/secrets.toml", "/Users/henrik/github/DEVELOP/gliclass-as-a-service/.streamlit/secrets.toml",]
# files = [ "/Users/henrik/.streamlit/secrets.toml", "/Users/henrik/github/DEVELOP/gliclass-as-a-service/.streamlit/secrets.toml",]
